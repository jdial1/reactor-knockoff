# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main", "master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Prepare files for deployment
        run: |
          # Create a clean deployment directory
          mkdir -p deploy
          # Copy only the essential files
          cp index.html deploy/
          cp -r css deploy/
          cp -r js deploy/
          cp -r data deploy/
          cp -r img deploy/

          # Generate static version file
          echo "Generating version file..."
          VERSION=$(date +%y_%m_%d_%H_%M)
          echo "{\"version\": \"$VERSION\"}" > deploy/version.json
          echo "Version generated: $VERSION"

          # List what we're deploying
          echo "Files to be deployed:"
          find deploy -type f | head -20

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./deploy"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
